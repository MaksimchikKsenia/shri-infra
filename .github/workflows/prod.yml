name: Prod Flow

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version"
        required: true

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Yandex Container Registry
        run: echo ${{ secrets.YANDEX_OAUTH_TOKEN }} | docker login --username oauth --password-stdin cr.yandex

      - name: Check if Docker image exists in Container Registry
        run: |
          if docker pull cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest; then
            echo "Docker image cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest found."
          else
            echo "Error: Docker image cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest not found."
            exit 1
          fi

      - name: Connect to VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_SERVER_HOST }}
          username: ${{ secrets.PRODUCTION_SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Run commands on VM
        run: |
          sudo docker login --username oauth --password ${{ secrets.YANDEX_OAUTH_TOKEN }} cr.yandex
          if [ "$(docker ps -q)" ]; then
            sudo docker kill $(docker ps -q) &> /dev/null
          fi
          if [ "$(docker ps -a -q)" ]; then
            sudo docker rm $(docker ps -a -q) &> /dev/null
          fi
          sudo docker run -dp 3000:3000 cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest